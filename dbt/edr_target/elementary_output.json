{"creation_time": "2025-07-05T13:39:44+00:00", "days_back": 7, "models": {"model.podcast_analytics.int_user_sessions": {"name": "int_user_sessions", "unique_id": "model.podcast_analytics.int_user_sessions", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/2.intermediate/int_user_sessions.sql", "meta": {}, "materialization": "view", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "int_user_sessions", "patch_path": null, "model_name": "int_user_sessions", "normalized_full_path": "podcast_analytics/models/2.intermediate/int_user_sessions.sql", "fqn": "podcast_analytics.public.int_user_sessions", "artifact_type": "model"}, "model.podcast_analytics.dim_users": {"name": "dim_users", "unique_id": "model.podcast_analytics.dim_users", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/3.marts/dim_users.sql", "meta": {}, "materialization": "table", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_users", "patch_path": "podcast_analytics://models/schema.yml", "model_name": "dim_users", "normalized_full_path": "podcast_analytics/models/3.marts/dim_users.sql", "fqn": "podcast_analytics.public.dim_users", "artifact_type": "model"}, "model.podcast_analytics.mart_top_episodes": {"name": "mart_top_episodes", "unique_id": "model.podcast_analytics.mart_top_episodes", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/3.marts/mart_top_episodes.sql", "meta": {}, "materialization": "table", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "mart_top_episodes", "patch_path": null, "model_name": "mart_top_episodes", "normalized_full_path": "podcast_analytics/models/3.marts/mart_top_episodes.sql", "fqn": "podcast_analytics.public.mart_top_episodes", "artifact_type": "model"}, "model.podcast_analytics.mart_user_session_metrics": {"name": "mart_user_session_metrics", "unique_id": "model.podcast_analytics.mart_user_session_metrics", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/3.marts/mart_user_session_metrics.sql", "meta": {}, "materialization": "table", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "mart_user_session_metrics", "patch_path": null, "model_name": "mart_user_session_metrics", "normalized_full_path": "podcast_analytics/models/3.marts/mart_user_session_metrics.sql", "fqn": "podcast_analytics.public.mart_user_session_metrics", "artifact_type": "model"}, "model.podcast_analytics.fact_user_events": {"name": "fact_user_events", "unique_id": "model.podcast_analytics.fact_user_events", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/3.marts/fact_user_events.sql", "meta": {}, "materialization": "table", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "patch_path": "podcast_analytics://models/schema.yml", "model_name": "fact_user_events", "normalized_full_path": "podcast_analytics/models/3.marts/fact_user_events.sql", "fqn": "podcast_analytics.public.fact_user_events", "artifact_type": "model"}, "model.podcast_analytics.dim_episodes": {"name": "dim_episodes", "unique_id": "model.podcast_analytics.dim_episodes", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/3.marts/dim_episodes.sql", "meta": {}, "materialization": "table", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_episodes", "patch_path": "podcast_analytics://models/schema.yml", "model_name": "dim_episodes", "normalized_full_path": "podcast_analytics/models/3.marts/dim_episodes.sql", "fqn": "podcast_analytics.public.dim_episodes", "artifact_type": "model"}, "model.podcast_analytics.stg_user_events": {"name": "stg_user_events", "unique_id": "model.podcast_analytics.stg_user_events", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "Typed raw event records", "full_path": "models/1.staging/stg_user_events.sql", "meta": {}, "materialization": "view", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events", "patch_path": "podcast_analytics://models/schema.yml", "model_name": "stg_user_events", "normalized_full_path": "podcast_analytics/models/1.staging/stg_user_events.sql", "fqn": "podcast_analytics.public.stg_user_events", "artifact_type": "model"}, "model.podcast_analytics.stg_users": {"name": "stg_users", "unique_id": "model.podcast_analytics.stg_users", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/1.staging/stg_users.sql", "meta": {}, "materialization": "view", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_users", "patch_path": "podcast_analytics://models/schema.yml", "model_name": "stg_users", "normalized_full_path": "podcast_analytics/models/1.staging/stg_users.sql", "fqn": "podcast_analytics.public.stg_users", "artifact_type": "model"}, "model.podcast_analytics.stg_episodes": {"name": "stg_episodes", "unique_id": "model.podcast_analytics.stg_episodes", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/1.staging/stg_episodes.sql", "meta": {}, "materialization": "view", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_episodes", "patch_path": "podcast_analytics://models/schema.yml", "model_name": "stg_episodes", "normalized_full_path": "podcast_analytics/models/1.staging/stg_episodes.sql", "fqn": "podcast_analytics.public.stg_episodes", "artifact_type": "model"}, "model.podcast_analytics.stg_user_events_invalid": {"name": "stg_user_events_invalid", "unique_id": "model.podcast_analytics.stg_user_events_invalid", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "Invalid event records for data quality investigation", "full_path": "models/1.staging/stg_user_events_invalid.sql", "meta": {}, "materialization": "view", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events_invalid", "patch_path": "podcast_analytics://models/schema.yml", "model_name": "stg_user_events_invalid", "normalized_full_path": "podcast_analytics/models/1.staging/stg_user_events_invalid.sql", "fqn": "podcast_analytics.public.stg_user_events_invalid", "artifact_type": "model"}, "source.podcast_analytics.raw.event_files": {"name": "event_files", "unique_id": "source.podcast_analytics.raw.event_files", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/schema.yml", "meta": {}, "materialization": null, "source_name": "raw", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "raw_event_files", "model_name": "event_files", "normalized_full_path": "podcast_analytics/sources/schema.yml", "fqn": "podcast_analytics.public.raw_event_files", "artifact_type": "source"}, "source.podcast_analytics.raw.users": {"name": "users", "unique_id": "source.podcast_analytics.raw.users", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/schema.yml", "meta": {}, "materialization": null, "source_name": "raw", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "raw_users", "model_name": "users", "normalized_full_path": "podcast_analytics/sources/schema.yml", "fqn": "podcast_analytics.public.raw_users", "artifact_type": "source"}, "source.podcast_analytics.raw.episodes": {"name": "episodes", "unique_id": "source.podcast_analytics.raw.episodes", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "models/schema.yml", "meta": {}, "materialization": null, "source_name": "raw", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "raw_episodes", "model_name": "episodes", "normalized_full_path": "podcast_analytics/sources/schema.yml", "fqn": "podcast_analytics.public.raw_episodes", "artifact_type": "source"}, "seed.podcast_analytics.raw_episodes": {"name": "raw_episodes", "unique_id": "seed.podcast_analytics.raw_episodes", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "../seeds/raw_episodes.csv", "meta": {}, "materialization": null, "database_name": "podcast_analytics", "schema_name": "public", "table_name": "raw_episodes", "model_name": "raw_episodes", "normalized_full_path": "podcast_analytics/seeds/seeds/raw_episodes.csv", "fqn": "podcast_analytics.public.raw_episodes", "artifact_type": "seed"}, "seed.podcast_analytics.raw_users": {"name": "raw_users", "unique_id": "seed.podcast_analytics.raw_users", "owners": [], "tags": [], "package_name": "podcast_analytics", "description": "", "full_path": "../seeds/raw_users.csv", "meta": {}, "materialization": null, "database_name": "podcast_analytics", "schema_name": "public", "table_name": "raw_users", "model_name": "raw_users", "normalized_full_path": "podcast_analytics/seeds/seeds/raw_users.csv", "fqn": "podcast_analytics.public.raw_users", "artifact_type": "seed"}}, "groups": {"data_assets": [{"name": "dwh", "data": {"podcast_analytics": {"public": {"__files__": [{"node_id": "model.podcast_analytics.int_user_sessions", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_top_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_user_session_metrics", "resource_type": "model"}, {"node_id": "model.podcast_analytics.fact_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events_invalid", "resource_type": "model"}, {"node_id": "source.podcast_analytics.raw.event_files", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.users", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.episodes", "resource_type": "source"}]}}}}, {"name": "dbt", "data": {"podcast_analytics": {"models": {"2.intermediate": {"__files__": [{"node_id": "model.podcast_analytics.int_user_sessions", "resource_type": "model"}]}, "3.marts": {"__files__": [{"node_id": "model.podcast_analytics.dim_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_top_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_user_session_metrics", "resource_type": "model"}, {"node_id": "model.podcast_analytics.fact_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_episodes", "resource_type": "model"}]}, "1.staging": {"__files__": [{"node_id": "model.podcast_analytics.stg_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events_invalid", "resource_type": "model"}]}}, "sources": {"__files__": [{"node_id": "source.podcast_analytics.raw.event_files", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.users", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.episodes", "resource_type": "source"}]}, "seeds": {"seeds": {"__files__": [{"node_id": "seed.podcast_analytics.raw_episodes", "resource_type": "seed"}, {"node_id": "seed.podcast_analytics.raw_users", "resource_type": "seed"}]}}}}}, {"name": "tags", "data": {"No tags": [{"node_id": "model.podcast_analytics.int_user_sessions", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_top_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_user_session_metrics", "resource_type": "model"}, {"node_id": "model.podcast_analytics.fact_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events_invalid", "resource_type": "model"}, {"node_id": "source.podcast_analytics.raw.event_files", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.users", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.episodes", "resource_type": "source"}, {"node_id": "seed.podcast_analytics.raw_episodes", "resource_type": "seed"}, {"node_id": "seed.podcast_analytics.raw_users", "resource_type": "seed"}]}}, {"name": "owners", "data": {"No owners": [{"node_id": "model.podcast_analytics.int_user_sessions", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_top_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_user_session_metrics", "resource_type": "model"}, {"node_id": "model.podcast_analytics.fact_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events_invalid", "resource_type": "model"}, {"node_id": "source.podcast_analytics.raw.event_files", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.users", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.episodes", "resource_type": "source"}, {"node_id": "seed.podcast_analytics.raw_episodes", "resource_type": "seed"}, {"node_id": "seed.podcast_analytics.raw_users", "resource_type": "seed"}]}}], "bi_assets": null, "dbt": {"podcast_analytics": {"models": {"2.intermediate": {"__files__": [{"node_id": "model.podcast_analytics.int_user_sessions", "resource_type": "model"}]}, "3.marts": {"__files__": [{"node_id": "model.podcast_analytics.dim_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_top_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_user_session_metrics", "resource_type": "model"}, {"node_id": "model.podcast_analytics.fact_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_episodes", "resource_type": "model"}]}, "1.staging": {"__files__": [{"node_id": "model.podcast_analytics.stg_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events_invalid", "resource_type": "model"}]}}, "sources": {"__files__": [{"node_id": "source.podcast_analytics.raw.event_files", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.users", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.episodes", "resource_type": "source"}]}, "seeds": {"seeds": {"__files__": [{"node_id": "seed.podcast_analytics.raw_episodes", "resource_type": "seed"}, {"node_id": "seed.podcast_analytics.raw_users", "resource_type": "seed"}]}}}}, "tags": {"No tags": [{"node_id": "model.podcast_analytics.int_user_sessions", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_top_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_user_session_metrics", "resource_type": "model"}, {"node_id": "model.podcast_analytics.fact_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events_invalid", "resource_type": "model"}, {"node_id": "source.podcast_analytics.raw.event_files", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.users", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.episodes", "resource_type": "source"}, {"node_id": "seed.podcast_analytics.raw_episodes", "resource_type": "seed"}, {"node_id": "seed.podcast_analytics.raw_users", "resource_type": "seed"}]}, "owners": {"No owners": [{"node_id": "model.podcast_analytics.int_user_sessions", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_top_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.mart_user_session_metrics", "resource_type": "model"}, {"node_id": "model.podcast_analytics.fact_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.dim_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_users", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_episodes", "resource_type": "model"}, {"node_id": "model.podcast_analytics.stg_user_events_invalid", "resource_type": "model"}, {"node_id": "source.podcast_analytics.raw.event_files", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.users", "resource_type": "source"}, {"node_id": "source.podcast_analytics.raw.episodes", "resource_type": "source"}, {"node_id": "seed.podcast_analytics.raw_episodes", "resource_type": "seed"}, {"node_id": "seed.podcast_analytics.raw_users", "resource_type": "seed"}]}}, "invocation": {"invocation_id": null, "detected_at": null, "command": null, "selected": null, "full_refresh": null, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, "tests": {"test.podcast_analytics.unique_stg_user_events_event_id.6926ae65d7": {"unique_id": "test.podcast_analytics.unique_stg_user_events_event_id.6926ae65d7", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "event_id", "name": "unique_stg_user_events_event_id", "display_name": "Unique Stg User Events Event Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "description": null, "configuration": {"test_name": "unique_stg_user_events_event_id", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.not_null_stg_user_events_event_id.3ab7415ad7": {"unique_id": "test.podcast_analytics.not_null_stg_user_events_event_id.3ab7415ad7", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "event_id", "name": "not_null_stg_user_events_event_id", "display_name": "Not Null Stg User Events Event Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "description": null, "configuration": {"test_name": "not_null_stg_user_events_event_id", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.accepted_values_stg_user_events_event_type__play__pause__seek__complete.47468a40f8": {"unique_id": "test.podcast_analytics.accepted_values_stg_user_events_event_type__play__pause__seek__complete.47468a40f8", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "event_type", "name": "accepted_values_stg_user_events_event_type__play__pause__seek__complete", "display_name": "Accepted Values Stg User Events Event Type  Play  Pause  Seek  Complete", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "description": null, "configuration": {"test_name": "accepted_values_stg_user_events_event_type__play__pause__seek__complete", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.accepted_values_stg_user_events_invalid_issue_type__missing_event_type__invalid_event_type__missing_timestamp__malformed_timestamp__missing_user_id__missing_episode_id__other_issue.09ad3b2fc7": {"unique_id": "test.podcast_analytics.accepted_values_stg_user_events_invalid_issue_type__missing_event_type__invalid_event_type__missing_timestamp__malformed_timestamp__missing_user_id__missing_episode_id__other_issue.09ad3b2fc7", "model_unique_id": "model.podcast_analytics.stg_user_events_invalid", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "issue_type", "name": "accepted_values_stg_user_events_invalid_issue_type__missing_event_type__invalid_event_type__missing_timestamp__malformed_timestamp__missing_user_id__missing_episode_id__other_issue", "display_name": "Accepted Values Stg User Events Invalid Issue Type  Missing Event Type  Invalid Event Type  Missing Timestamp  Malformed Timestamp  Missing User Id  Missing Episode Id  Other Issue", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"values": ["missing_event_type", "invalid_event_type", "missing_timestamp", "malformed_timestamp", "missing_user_id", "missing_episode_id", "other_issue"], "column_name": "issue_type", "model": "{{ get_where_subquery(ref('stg_user_events_invalid')) }}"}, "description": null, "configuration": {"test_name": "accepted_values_stg_user_events_invalid_issue_type__missing_event_type__invalid_event_type__missing_timestamp__malformed_timestamp__missing_user_id__missing_episode_id__other_issue", "test_params": {"values": ["missing_event_type", "invalid_event_type", "missing_timestamp", "malformed_timestamp", "missing_user_id", "missing_episode_id", "other_issue"], "column_name": "issue_type", "model": "{{ get_where_subquery(ref('stg_user_events_invalid')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.unique_stg_users_user_id.c2ff477e6b": {"unique_id": "test.podcast_analytics.unique_stg_users_user_id.c2ff477e6b", "model_unique_id": "model.podcast_analytics.stg_users", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "user_id", "name": "unique_stg_users_user_id", "display_name": "Unique Stg Users User Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}, "description": null, "configuration": {"test_name": "unique_stg_users_user_id", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.not_null_stg_users_user_id.980dfc1b77": {"unique_id": "test.podcast_analytics.not_null_stg_users_user_id.980dfc1b77", "model_unique_id": "model.podcast_analytics.stg_users", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "user_id", "name": "not_null_stg_users_user_id", "display_name": "Not Null Stg Users User Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}, "description": null, "configuration": {"test_name": "not_null_stg_users_user_id", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.unique_stg_episodes_episode_id.de98524a16": {"unique_id": "test.podcast_analytics.unique_stg_episodes_episode_id.de98524a16", "model_unique_id": "model.podcast_analytics.stg_episodes", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "episode_id", "name": "unique_stg_episodes_episode_id", "display_name": "Unique Stg Episodes Episode Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}, "description": null, "configuration": {"test_name": "unique_stg_episodes_episode_id", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.not_null_stg_episodes_episode_id.30984c0422": {"unique_id": "test.podcast_analytics.not_null_stg_episodes_episode_id.30984c0422", "model_unique_id": "model.podcast_analytics.stg_episodes", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "episode_id", "name": "not_null_stg_episodes_episode_id", "display_name": "Not Null Stg Episodes Episode Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}, "description": null, "configuration": {"test_name": "not_null_stg_episodes_episode_id", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.unique_dim_episodes_episode_id.cf91e42e2f": {"unique_id": "test.podcast_analytics.unique_dim_episodes_episode_id.cf91e42e2f", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "episode_id", "name": "unique_dim_episodes_episode_id", "display_name": "Unique Dim Episodes Episode Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "description": null, "configuration": {"test_name": "unique_dim_episodes_episode_id", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.not_null_dim_episodes_episode_id.9d7afaf3c8": {"unique_id": "test.podcast_analytics.not_null_dim_episodes_episode_id.9d7afaf3c8", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "episode_id", "name": "not_null_dim_episodes_episode_id", "display_name": "Not Null Dim Episodes Episode Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "description": null, "configuration": {"test_name": "not_null_dim_episodes_episode_id", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.not_null_dim_episodes_title.388fd88fff": {"unique_id": "test.podcast_analytics.not_null_dim_episodes_title.388fd88fff", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "title", "name": "not_null_dim_episodes_title", "display_name": "Not Null Dim Episodes Title", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "title", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "description": null, "configuration": {"test_name": "not_null_dim_episodes_title", "test_params": {"column_name": "title", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.unique_dim_users_user_id.bcdc17b9f9": {"unique_id": "test.podcast_analytics.unique_dim_users_user_id.bcdc17b9f9", "model_unique_id": "model.podcast_analytics.dim_users", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "user_id", "name": "unique_dim_users_user_id", "display_name": "Unique Dim Users User Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}, "description": null, "configuration": {"test_name": "unique_dim_users_user_id", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.not_null_dim_users_user_id.e754bb5812": {"unique_id": "test.podcast_analytics.not_null_dim_users_user_id.e754bb5812", "model_unique_id": "model.podcast_analytics.dim_users", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "user_id", "name": "not_null_dim_users_user_id", "display_name": "Not Null Dim Users User Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}, "description": null, "configuration": {"test_name": "not_null_dim_users_user_id", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.not_null_fact_user_events_user_id.d63f8f4583": {"unique_id": "test.podcast_analytics.not_null_fact_user_events_user_id.d63f8f4583", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "user_id", "name": "not_null_fact_user_events_user_id", "display_name": "Not Null Fact User Events User Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "description": null, "configuration": {"test_name": "not_null_fact_user_events_user_id", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.relationships_fact_user_events_user_id__user_id__ref_dim_users_.b25d17b222": {"unique_id": "test.podcast_analytics.relationships_fact_user_events_user_id__user_id__ref_dim_users_.b25d17b222", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "user_id", "name": "relationships_fact_user_events_user_id__user_id__ref_dim_users_", "display_name": "Relationships Fact User Events User Id  User Id  Ref Dim Users ", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"to": "ref('dim_users')", "field": "user_id", "column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "description": null, "configuration": {"test_name": "relationships_fact_user_events_user_id__user_id__ref_dim_users_", "test_params": {"to": "ref('dim_users')", "field": "user_id", "column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.not_null_fact_user_events_episode_id.d4ea3f442b": {"unique_id": "test.podcast_analytics.not_null_fact_user_events_episode_id.d4ea3f442b", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "episode_id", "name": "not_null_fact_user_events_episode_id", "display_name": "Not Null Fact User Events Episode Id", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "description": null, "configuration": {"test_name": "not_null_fact_user_events_episode_id", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.relationships_fact_user_events_episode_id__episode_id__ref_dim_episodes_.c7a91eaa25": {"unique_id": "test.podcast_analytics.relationships_fact_user_events_episode_id__episode_id__ref_dim_episodes_.c7a91eaa25", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "episode_id", "name": "relationships_fact_user_events_episode_id__episode_id__ref_dim_episodes_", "display_name": "Relationships Fact User Events Episode Id  Episode Id  Ref Dim Episodes ", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"to": "ref('dim_episodes')", "field": "episode_id", "column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "description": null, "configuration": {"test_name": "relationships_fact_user_events_episode_id__episode_id__ref_dim_episodes_", "test_params": {"to": "ref('dim_episodes')", "field": "episode_id", "column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}, "test.podcast_analytics.accepted_values_fact_user_events_event_type__play__pause__seek__complete.1169c959e4": {"unique_id": "test.podcast_analytics.accepted_values_fact_user_events_event_type__play__pause__seek__complete.1169c959e4", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "", "database_name": "podcast_analytics", "schema_name": "public", "table_name": null, "column_name": "event_type", "name": "accepted_values_fact_user_events_event_type__play__pause__seek__complete", "display_name": "Accepted Values Fact User Events Event Type  Play  Pause  Seek  Complete", "original_path": "models/schema.yml", "type": "generic", "test_type": "dbt_test", "test_sub_type": "generic", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "description": null, "configuration": {"test_name": "accepted_values_fact_user_events_event_type__play__pause__seek__complete", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml", "created_at": "2025-07-05T10:55:11", "latest_run_time": "2025-07-05T10:55:11+00:00", "latest_run_time_utc": "2025-07-05T11:55:11+01:00", "latest_run_status": "pass"}}, "test_results": {"model.podcast_analytics.fact_user_events": [{"metadata": {"test_unique_id": "test.podcast_analytics.accepted_values_fact_user_events_event_type__play__pause__seek__complete.1169c959e4", "elementary_unique_id": "test.podcast_analytics.accepted_values_fact_user_events_event_type__play__pause__seek__complete.1169c959e4.event_type.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "event_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        event_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    group by event_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'play','pause','seek','complete'\n)", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        event_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    group by event_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'play','pause','seek','complete'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.not_null_fact_user_events_episode_id.d4ea3f442b", "elementary_unique_id": "test.podcast_analytics.not_null_fact_user_events_episode_id.d4ea3f442b.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "episode_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"fact_user_events\"\nwhere episode_id is null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"fact_user_events\"\nwhere episode_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.not_null_fact_user_events_user_id.d63f8f4583", "elementary_unique_id": "test.podcast_analytics.not_null_fact_user_events_user_id.d63f8f4583.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "user_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"fact_user_events\"\nwhere user_id is null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"fact_user_events\"\nwhere user_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.relationships_fact_user_events_episode_id__episode_id__ref_dim_episodes_.c7a91eaa25", "elementary_unique_id": "test.podcast_analytics.relationships_fact_user_events_episode_id__episode_id__ref_dim_episodes_.c7a91eaa25.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "episode_id", "test_name": "relationships", "test_display_name": "Relationships", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select episode_id as from_field\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    where episode_id is not null\n),\n\nparent as (\n    select episode_id as to_field\n    from \"podcast_analytics\".\"public\".\"dim_episodes\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('dim_episodes')", "field": "episode_id", "column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select episode_id as from_field\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    where episode_id is not null\n),\n\nparent as (\n    select episode_id as to_field\n    from \"podcast_analytics\".\"public\".\"dim_episodes\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('dim_episodes')", "field": "episode_id", "column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.relationships_fact_user_events_user_id__user_id__ref_dim_users_.b25d17b222", "elementary_unique_id": "test.podcast_analytics.relationships_fact_user_events_user_id__user_id__ref_dim_users_.b25d17b222.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "user_id", "test_name": "relationships", "test_display_name": "Relationships", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select user_id as from_field\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    where user_id is not null\n),\n\nparent as (\n    select user_id as to_field\n    from \"podcast_analytics\".\"public\".\"dim_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('dim_users')", "field": "user_id", "column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select user_id as from_field\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    where user_id is not null\n),\n\nparent as (\n    select user_id as to_field\n    from \"podcast_analytics\".\"public\".\"dim_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('dim_users')", "field": "user_id", "column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.podcast_analytics.stg_user_events": [{"metadata": {"test_unique_id": "test.podcast_analytics.accepted_values_stg_user_events_event_type__play__pause__seek__complete.47468a40f8", "elementary_unique_id": "test.podcast_analytics.accepted_values_stg_user_events_event_type__play__pause__seek__complete.47468a40f8.event_type.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events", "column_name": "event_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "podcast_analytics.public.stg_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        event_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"stg_user_events\"\n    group by event_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'play','pause','seek','complete'\n)", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        event_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"stg_user_events\"\n    group by event_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'play','pause','seek','complete'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.not_null_stg_user_events_event_id.3ab7415ad7", "elementary_unique_id": "test.podcast_analytics.not_null_stg_user_events_event_id.3ab7415ad7.event_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events", "column_name": "event_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "podcast_analytics.public.stg_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select event_id\nfrom \"podcast_analytics\".\"public\".\"stg_user_events\"\nwhere event_id is null", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select event_id\nfrom \"podcast_analytics\".\"public\".\"stg_user_events\"\nwhere event_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_stg_user_events_event_id.6926ae65d7", "elementary_unique_id": "test.podcast_analytics.unique_stg_user_events_event_id.6926ae65d7.event_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events", "column_name": "event_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "podcast_analytics.public.stg_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_user_events\"\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_user_events\"\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.podcast_analytics.dim_users": [{"metadata": {"test_unique_id": "test.podcast_analytics.not_null_dim_users_user_id.e754bb5812", "elementary_unique_id": "test.podcast_analytics.not_null_dim_users_user_id.e754bb5812.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_users", "column_name": "user_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_users", "table_unique_id": "podcast_analytics.public.dim_users", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"dim_users\"\nwhere user_id is null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"dim_users\"\nwhere user_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_dim_users_user_id.bcdc17b9f9", "elementary_unique_id": "test.podcast_analytics.unique_dim_users_user_id.bcdc17b9f9.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_users", "column_name": "user_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_users", "table_unique_id": "podcast_analytics.public.dim_users", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"dim_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"dim_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.podcast_analytics.stg_users": [{"metadata": {"test_unique_id": "test.podcast_analytics.not_null_stg_users_user_id.980dfc1b77", "elementary_unique_id": "test.podcast_analytics.not_null_stg_users_user_id.980dfc1b77.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_users", "column_name": "user_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_users", "table_unique_id": "podcast_analytics.public.stg_users", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"stg_users\"\nwhere user_id is null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"stg_users\"\nwhere user_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_stg_users_user_id.c2ff477e6b", "elementary_unique_id": "test.podcast_analytics.unique_stg_users_user_id.c2ff477e6b.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_users", "column_name": "user_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_users", "table_unique_id": "podcast_analytics.public.stg_users", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.podcast_analytics.stg_user_events_invalid": [{"metadata": {"test_unique_id": "test.podcast_analytics.accepted_values_stg_user_events_invalid_issue_type__missing_event_type__invalid_event_type__missing_timestamp__malformed_timestamp__missing_user_id__missing_episode_id__other_issue.09ad3b2fc7", "elementary_unique_id": "test.podcast_analytics.accepted_values_stg_user_events_invalid_issue_type__missing_event_type__invalid_event_type__missing_timestamp__malformed_timestamp__missing_user_id__missing_episode_id__other_issue.09ad3b2fc7.issue_type.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events_invalid", "column_name": "issue_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_user_events_invalid", "table_unique_id": "podcast_analytics.public.stg_user_events_invalid", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        issue_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"stg_user_events_invalid\"\n    group by issue_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'missing_event_type','invalid_event_type','missing_timestamp','malformed_timestamp','missing_user_id','missing_episode_id','other_issue'\n)", "test_params": {"values": ["missing_event_type", "invalid_event_type", "missing_timestamp", "malformed_timestamp", "missing_user_id", "missing_episode_id", "other_issue"], "column_name": "issue_type", "model": "{{ get_where_subquery(ref('stg_user_events_invalid')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        issue_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"stg_user_events_invalid\"\n    group by issue_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'missing_event_type','invalid_event_type','missing_timestamp','malformed_timestamp','missing_user_id','missing_episode_id','other_issue'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["missing_event_type", "invalid_event_type", "missing_timestamp", "malformed_timestamp", "missing_user_id", "missing_episode_id", "other_issue"], "column_name": "issue_type", "model": "{{ get_where_subquery(ref('stg_user_events_invalid')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.podcast_analytics.dim_episodes": [{"metadata": {"test_unique_id": "test.podcast_analytics.not_null_dim_episodes_episode_id.9d7afaf3c8", "elementary_unique_id": "test.podcast_analytics.not_null_dim_episodes_episode_id.9d7afaf3c8.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_episodes", "column_name": "episode_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "podcast_analytics.public.dim_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere episode_id is null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere episode_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.not_null_dim_episodes_title.388fd88fff", "elementary_unique_id": "test.podcast_analytics.not_null_dim_episodes_title.388fd88fff.title.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_episodes", "column_name": "title", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "podcast_analytics.public.dim_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select title\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere title is null", "test_params": {"column_name": "title", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select title\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere title is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "title", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_dim_episodes_episode_id.cf91e42e2f", "elementary_unique_id": "test.podcast_analytics.unique_dim_episodes_episode_id.cf91e42e2f.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_episodes", "column_name": "episode_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "podcast_analytics.public.dim_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.podcast_analytics.stg_episodes": [{"metadata": {"test_unique_id": "test.podcast_analytics.not_null_stg_episodes_episode_id.30984c0422", "elementary_unique_id": "test.podcast_analytics.not_null_stg_episodes_episode_id.30984c0422.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_episodes", "column_name": "episode_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_episodes", "table_unique_id": "podcast_analytics.public.stg_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"stg_episodes\"\nwhere episode_id is null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"stg_episodes\"\nwhere episode_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_stg_episodes_episode_id.de98524a16", "elementary_unique_id": "test.podcast_analytics.unique_stg_episodes_episode_id.de98524a16.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_episodes", "column_name": "episode_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_episodes", "table_unique_id": "podcast_analytics.public.stg_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}]}, "test_results_totals": {"model.podcast_analytics.fact_user_events": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.podcast_analytics.stg_user_events": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.podcast_analytics.dim_users": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.podcast_analytics.stg_users": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.podcast_analytics.stg_user_events_invalid": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.dim_episodes": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.podcast_analytics.stg_episodes": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}}, "test_runs": {"model.podcast_analytics.fact_user_events": [{"metadata": {"test_unique_id": "test.podcast_analytics.accepted_values_fact_user_events_event_type__play__pause__seek__complete.1169c959e4", "elementary_unique_id": "test.podcast_analytics.accepted_values_fact_user_events_event_type__play__pause__seek__complete.1169c959e4.event_type.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "event_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        event_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    group by event_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'play','pause','seek','complete'\n)", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        event_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    group by event_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'play','pause','seek','complete'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.2852199077606201}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.2852199077606201, "last_exec_time": 0.2852199077606201}, {"metadata": {"test_unique_id": "test.podcast_analytics.not_null_fact_user_events_episode_id.d4ea3f442b", "elementary_unique_id": "test.podcast_analytics.not_null_fact_user_events_episode_id.d4ea3f442b.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "episode_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"fact_user_events\"\nwhere episode_id is null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"fact_user_events\"\nwhere episode_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.07594585418701172}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.07594585418701172, "last_exec_time": 0.07594585418701172}, {"metadata": {"test_unique_id": "test.podcast_analytics.not_null_fact_user_events_user_id.d63f8f4583", "elementary_unique_id": "test.podcast_analytics.not_null_fact_user_events_user_id.d63f8f4583.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "user_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"fact_user_events\"\nwhere user_id is null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"fact_user_events\"\nwhere user_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.0779409408569336}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.0779409408569336, "last_exec_time": 0.0779409408569336}, {"metadata": {"test_unique_id": "test.podcast_analytics.relationships_fact_user_events_episode_id__episode_id__ref_dim_episodes_.c7a91eaa25", "elementary_unique_id": "test.podcast_analytics.relationships_fact_user_events_episode_id__episode_id__ref_dim_episodes_.c7a91eaa25.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "episode_id", "test_name": "relationships", "test_display_name": "Relationships", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select episode_id as from_field\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    where episode_id is not null\n),\n\nparent as (\n    select episode_id as to_field\n    from \"podcast_analytics\".\"public\".\"dim_episodes\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('dim_episodes')", "field": "episode_id", "column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select episode_id as from_field\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    where episode_id is not null\n),\n\nparent as (\n    select episode_id as to_field\n    from \"podcast_analytics\".\"public\".\"dim_episodes\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('dim_episodes')", "field": "episode_id", "column_name": "episode_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.10174322128295898}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.10174322128295898, "last_exec_time": 0.10174322128295898}, {"metadata": {"test_unique_id": "test.podcast_analytics.relationships_fact_user_events_user_id__user_id__ref_dim_users_.b25d17b222", "elementary_unique_id": "test.podcast_analytics.relationships_fact_user_events_user_id__user_id__ref_dim_users_.b25d17b222.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "fact_user_events", "column_name": "user_id", "test_name": "relationships", "test_display_name": "Relationships", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.fact_user_events", "table_unique_id": "podcast_analytics.public.fact_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select user_id as from_field\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    where user_id is not null\n),\n\nparent as (\n    select user_id as to_field\n    from \"podcast_analytics\".\"public\".\"dim_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('dim_users')", "field": "user_id", "column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select user_id as from_field\n    from \"podcast_analytics\".\"public\".\"fact_user_events\"\n    where user_id is not null\n),\n\nparent as (\n    select user_id as to_field\n    from \"podcast_analytics\".\"public\".\"dim_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('dim_users')", "field": "user_id", "column_name": "user_id", "model": "{{ get_where_subquery(ref('fact_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.10047101974487305}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.10047101974487305, "last_exec_time": 0.10047101974487305}], "model.podcast_analytics.stg_user_events": [{"metadata": {"test_unique_id": "test.podcast_analytics.accepted_values_stg_user_events_event_type__play__pause__seek__complete.47468a40f8", "elementary_unique_id": "test.podcast_analytics.accepted_values_stg_user_events_event_type__play__pause__seek__complete.47468a40f8.event_type.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events", "column_name": "event_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "podcast_analytics.public.stg_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        event_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"stg_user_events\"\n    group by event_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'play','pause','seek','complete'\n)", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        event_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"stg_user_events\"\n    group by event_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'play','pause','seek','complete'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["play", "pause", "seek", "complete"], "column_name": "event_type", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.27669405937194824}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.27669405937194824, "last_exec_time": 0.27669405937194824}, {"metadata": {"test_unique_id": "test.podcast_analytics.not_null_stg_user_events_event_id.3ab7415ad7", "elementary_unique_id": "test.podcast_analytics.not_null_stg_user_events_event_id.3ab7415ad7.event_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events", "column_name": "event_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "podcast_analytics.public.stg_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select event_id\nfrom \"podcast_analytics\".\"public\".\"stg_user_events\"\nwhere event_id is null", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select event_id\nfrom \"podcast_analytics\".\"public\".\"stg_user_events\"\nwhere event_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.11624503135681152}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.11624503135681152, "last_exec_time": 0.11624503135681152}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_stg_user_events_event_id.6926ae65d7", "elementary_unique_id": "test.podcast_analytics.unique_stg_user_events_event_id.6926ae65d7.event_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events", "column_name": "event_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_user_events", "table_unique_id": "podcast_analytics.public.stg_user_events", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_user_events\"\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    event_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_user_events\"\nwhere event_id is not null\ngroup by event_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "event_id", "model": "{{ get_where_subquery(ref('stg_user_events')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.05574512481689453}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.05574512481689453, "last_exec_time": 0.05574512481689453}], "model.podcast_analytics.dim_users": [{"metadata": {"test_unique_id": "test.podcast_analytics.not_null_dim_users_user_id.e754bb5812", "elementary_unique_id": "test.podcast_analytics.not_null_dim_users_user_id.e754bb5812.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_users", "column_name": "user_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_users", "table_unique_id": "podcast_analytics.public.dim_users", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"dim_users\"\nwhere user_id is null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"dim_users\"\nwhere user_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.07220005989074707}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.07220005989074707, "last_exec_time": 0.07220005989074707}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_dim_users_user_id.bcdc17b9f9", "elementary_unique_id": "test.podcast_analytics.unique_dim_users_user_id.bcdc17b9f9.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_users", "column_name": "user_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_users", "table_unique_id": "podcast_analytics.public.dim_users", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"dim_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"dim_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('dim_users')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.06786894798278809}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.06786894798278809, "last_exec_time": 0.06786894798278809}], "model.podcast_analytics.stg_users": [{"metadata": {"test_unique_id": "test.podcast_analytics.not_null_stg_users_user_id.980dfc1b77", "elementary_unique_id": "test.podcast_analytics.not_null_stg_users_user_id.980dfc1b77.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_users", "column_name": "user_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_users", "table_unique_id": "podcast_analytics.public.stg_users", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"stg_users\"\nwhere user_id is null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select user_id\nfrom \"podcast_analytics\".\"public\".\"stg_users\"\nwhere user_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.11367988586425781}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.11367988586425781, "last_exec_time": 0.11367988586425781}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_stg_users_user_id.c2ff477e6b", "elementary_unique_id": "test.podcast_analytics.unique_stg_users_user_id.c2ff477e6b.user_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_users", "column_name": "user_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_users", "table_unique_id": "podcast_analytics.public.stg_users", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "user_id", "model": "{{ get_where_subquery(ref('stg_users')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.053588151931762695}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.053588151931762695, "last_exec_time": 0.053588151931762695}], "model.podcast_analytics.stg_user_events_invalid": [{"metadata": {"test_unique_id": "test.podcast_analytics.accepted_values_stg_user_events_invalid_issue_type__missing_event_type__invalid_event_type__missing_timestamp__malformed_timestamp__missing_user_id__missing_episode_id__other_issue.09ad3b2fc7", "elementary_unique_id": "test.podcast_analytics.accepted_values_stg_user_events_invalid_issue_type__missing_event_type__invalid_event_type__missing_timestamp__malformed_timestamp__missing_user_id__missing_episode_id__other_issue.09ad3b2fc7.issue_type.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_user_events_invalid", "column_name": "issue_type", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_user_events_invalid", "table_unique_id": "podcast_analytics.public.stg_user_events_invalid", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        issue_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"stg_user_events_invalid\"\n    group by issue_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'missing_event_type','invalid_event_type','missing_timestamp','malformed_timestamp','missing_user_id','missing_episode_id','other_issue'\n)", "test_params": {"values": ["missing_event_type", "invalid_event_type", "missing_timestamp", "malformed_timestamp", "missing_user_id", "missing_episode_id", "other_issue"], "column_name": "issue_type", "model": "{{ get_where_subquery(ref('stg_user_events_invalid')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        issue_type as value_field,\n        count(*) as n_records\n\n    from \"podcast_analytics\".\"public\".\"stg_user_events_invalid\"\n    group by issue_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'missing_event_type','invalid_event_type','missing_timestamp','malformed_timestamp','missing_user_id','missing_episode_id','other_issue'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["missing_event_type", "invalid_event_type", "missing_timestamp", "malformed_timestamp", "missing_user_id", "missing_episode_id", "other_issue"], "column_name": "issue_type", "model": "{{ get_where_subquery(ref('stg_user_events_invalid')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.2871251106262207}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.2871251106262207, "last_exec_time": 0.2871251106262207}], "model.podcast_analytics.dim_episodes": [{"metadata": {"test_unique_id": "test.podcast_analytics.not_null_dim_episodes_episode_id.9d7afaf3c8", "elementary_unique_id": "test.podcast_analytics.not_null_dim_episodes_episode_id.9d7afaf3c8.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_episodes", "column_name": "episode_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "podcast_analytics.public.dim_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere episode_id is null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere episode_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.2863428592681885}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.2863428592681885, "last_exec_time": 0.2863428592681885}, {"metadata": {"test_unique_id": "test.podcast_analytics.not_null_dim_episodes_title.388fd88fff", "elementary_unique_id": "test.podcast_analytics.not_null_dim_episodes_title.388fd88fff.title.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_episodes", "column_name": "title", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "podcast_analytics.public.dim_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select title\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere title is null", "test_params": {"column_name": "title", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select title\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere title is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "title", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.07848501205444336}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.07848501205444336, "last_exec_time": 0.07848501205444336}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_dim_episodes_episode_id.cf91e42e2f", "elementary_unique_id": "test.podcast_analytics.unique_dim_episodes_episode_id.cf91e42e2f.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "dim_episodes", "column_name": "episode_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.dim_episodes", "table_unique_id": "podcast_analytics.public.dim_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"dim_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('dim_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.09923291206359863}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.09923291206359863, "last_exec_time": 0.09923291206359863}], "model.podcast_analytics.stg_episodes": [{"metadata": {"test_unique_id": "test.podcast_analytics.not_null_stg_episodes_episode_id.30984c0422", "elementary_unique_id": "test.podcast_analytics.not_null_stg_episodes_episode_id.30984c0422.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_episodes", "column_name": "episode_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_episodes", "table_unique_id": "podcast_analytics.public.stg_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"stg_episodes\"\nwhere episode_id is null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select episode_id\nfrom \"podcast_analytics\".\"public\".\"stg_episodes\"\nwhere episode_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.11872506141662598}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.11872506141662598, "last_exec_time": 0.11872506141662598}, {"metadata": {"test_unique_id": "test.podcast_analytics.unique_stg_episodes_episode_id.de98524a16", "elementary_unique_id": "test.podcast_analytics.unique_stg_episodes_episode_id.de98524a16.episode_id.generic", "database_name": "podcast_analytics", "schema_name": "public", "table_name": "stg_episodes", "column_name": "episode_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/schema.yml", "latest_run_time": "2025-07-05T11:55:11+01:00", "latest_run_time_utc": "2025-07-05T10:55:11+00:00", "latest_run_status": "pass", "model_unique_id": "model.podcast_analytics.stg_episodes", "table_unique_id": "podcast_analytics.public.stg_episodes", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"podcast_analytics\".\"public\".\"stg_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "episode_id", "model": "{{ get_where_subquery(ref('stg_episodes')) }}"}}, "test_tags": [], "normalized_full_path": "podcast_analytics/models/schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2025-07-05T10:55:11+00:00", "id": "51f9f693-986d-4d9f-a48e-5cf2647d412a", "status": "pass", "execution_time": 0.0691688060760498}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.0691688060760498, "last_exec_time": 0.0691688060760498}]}, "test_runs_totals": {"model.podcast_analytics.fact_user_events": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.podcast_analytics.stg_user_events": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.podcast_analytics.dim_users": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.podcast_analytics.stg_users": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}, "model.podcast_analytics.stg_user_events_invalid": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.dim_episodes": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.podcast_analytics.stg_episodes": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}}, "coverages": {"model.podcast_analytics.dim_episodes": {"table_tests": 0, "column_tests": 3}, "model.podcast_analytics.dim_users": {"table_tests": 0, "column_tests": 2}, "model.podcast_analytics.fact_user_events": {"table_tests": 0, "column_tests": 5}, "model.podcast_analytics.stg_episodes": {"table_tests": 0, "column_tests": 2}, "model.podcast_analytics.stg_user_events": {"table_tests": 0, "column_tests": 3}, "model.podcast_analytics.stg_user_events_invalid": {"table_tests": 0, "column_tests": 1}, "model.podcast_analytics.stg_users": {"table_tests": 0, "column_tests": 2}}, "model_runs": [{"unique_id": "model.podcast_analytics.dim_episodes", "schema": "public", "name": "dim_episodes", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- dim_episodes.sql : dimension table for episodes (one row per episode)\nselect * from \"podcast_analytics\".\"public\".\"stg_episodes\"", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.dim_users", "schema": "public", "name": "dim_users", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- dim_users.sql : dimension table for users (one row per user)\nselect * from \"podcast_analytics\".\"public\".\"stg_users\"", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.fact_user_events", "schema": "public", "name": "fact_user_events", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "\n-- fact_user_events.sql : central fact table of cleaned user events\nselect * from \"podcast_analytics\".\"public\".\"stg_user_events\"", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.int_user_sessions", "schema": "public", "name": "int_user_sessions", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- int_user_sessions.sql : derive user listening sessions\n\n-- 1. Bring in all user events from the staging model\nwith events as (\n    select * from \"podcast_analytics\".\"public\".\"stg_user_events\"\n),\n\n-- 2. For each event, get the timestamp of the previous event for the same user\nevents_with_lag as (\n    select\n        *,\n        lag(event_ts) over (partition by user_id order by event_ts) as previous_event_ts\n    from events\n),\n\n-- 3. Flag the start of a new session:\n--    - If there is no previous event (first event for user)\n--    - Or if the gap between events is more than 30 minutes\nflagged as (\n    select\n        *,\n        case\n            when previous_event_ts is null\n              or extract(epoch from (event_ts - previous_event_ts))/60 > 30\n            then 1 else 0 end as new_session_flag\n    from events_with_lag\n),\n\n-- 4. Assign a session number to each event for each user by cumulatively summing the new session flags\nnumbered as (\n    select\n        *,\n        sum(new_session_flag) over (partition by user_id order by event_ts) as session_number\n    from flagged\n),\n\n-- 5. Aggregate events into sessions:\n--    - Find session start/end timestamps\n--    - Sum up listening duration for the session\nagg as (\n    select\n        user_id,\n        session_number,\n        min(event_ts) as session_start,\n        max(event_ts) as session_end,\n        sum(coalesce(duration, 0)) as total_listening_duration\n    from numbered\n    group by user_id, session_number\n),\n\n-- 6. Generate a surrogate session_id and select final session fields\nfinal as (\n    select\n        md5(cast(coalesce(cast(user_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(session_number as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as session_id,\n        user_id,\n        session_start,\n        session_end,\n        total_listening_duration as session_duration\n    from agg\n)\n\n-- 7. Output the final sessionized data\nselect * from final", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.mart_top_episodes", "schema": "public", "name": "mart_top_episodes", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- mart_top_episodes.sql : engagement per episode\nwith events as (\n    select * from \"podcast_analytics\".\"public\".\"stg_user_events\"\n),\n\nplays as (\n    select episode_id, count(*) as plays\n    from events\n    where event_type = 'play'\n    group by episode_id\n),\n\ncompletions as (\n    select episode_id, count(*) as completions\n    from events\n    where event_type = 'complete'\n    group by episode_id\n),\n\njoined as (\n    select coalesce(p.episode_id, c.episode_id) as episode_id,\n           coalesce(p.plays, 0) as plays,\n           coalesce(c.completions, 0) as completions\n    from plays p\n    full outer join completions c using(episode_id)\n)\nselect\n    episode_id,\n    plays,\n    completions,\n    \n    ( completions ) / nullif( ( plays ), 0)\n as completion_rate\nfrom joined\norder by completion_rate desc", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.mart_user_session_metrics", "schema": "public", "name": "mart_user_session_metrics", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- mart_user_session_metrics.sql : user level session KPIs\nwith sessions as (\n    select * from \"podcast_analytics\".\"public\".\"int_user_sessions\"\n),\n\nmetrics as (\n    select\n        user_id,\n        avg(session_duration) as avg_session_duration,\n        count(*) as sessions,\n        cast(min(session_start) as date) as first_session_date,\n        cast(max(session_end) as date) as last_session_date\n    from sessions\n    group by user_id\n)\nselect * from metrics", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.stg_episodes", "schema": "public", "name": "stg_episodes", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- stg_episodes.sql : clean episode reference data\nwith source as (\n    select * from \"podcast_analytics\".\"public\".\"raw_episodes\"\n)\nselect\n    cast(episode_id as text) as episode_id,\n    cast(podcast_id as text) as podcast_id,\n    title,\n    cast(release_date as date) as release_date,\n    cast(duration_seconds as integer) as duration_seconds\nfrom source", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.stg_user_events", "schema": "public", "name": "stg_user_events", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- stg_user_events.sql : typed raw event records from JSONB\n-- Note: Invalid events are captured in stg_user_events_invalid.sql for investigation\nwith source as (\n    select data\n    from \"podcast_analytics\".\"public\".\"raw_event_files\"\n),\n\nvalid_events as (\n    select * from source\n    where data ->> 'event_type' is not null\n      and data ->> 'event_type' in ('play', 'pause', 'seek', 'complete')\n      and data ->> 'timestamp' is not null\n      and data ->> 'timestamp' != ''\n      and data ->> 'user_id' is not null\n      and data ->> 'episode_id' is not null\n),\n\ntyped as (\n    select\n        md5(cast(coalesce(cast(data ->> 'user_id' as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(data ->> 'episode_id' as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(data ->> 'timestamp' as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(data ->> 'event_type' as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as event_id,\n        data ->> 'user_id'      as user_id,\n        data ->> 'episode_id'   as episode_id,\n        case \n            when (data ->> 'timestamp') ~ '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}' then (data ->> 'timestamp')::timestamp\n            else null\n        end as event_ts,\n        data ->> 'event_type'         as event_type,\n        (data ->> 'duration')::integer as duration\n    from valid_events\n    where (data ->> 'timestamp') ~ '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}'\n)\nselect * from typed", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.stg_user_events_invalid", "schema": "public", "name": "stg_user_events_invalid", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- stg_user_events_invalid.sql : capture invalid event records for investigation\nwith source as (\n    select data\n    from \"podcast_analytics\".\"public\".\"raw_event_files\"\n),\n\ninvalid_events as (\n    select \n        data,\n        data ->> 'user_id' as user_id,\n        data ->> 'episode_id' as episode_id,\n        data ->> 'timestamp' as timestamp,\n        data ->> 'event_type' as event_type,\n        data ->> 'duration' as duration,\n        case \n            when data ->> 'event_type' is null then 'missing_event_type'\n            when data ->> 'event_type' not in ('play', 'pause', 'seek', 'complete') then 'invalid_event_type'\n            when data ->> 'timestamp' is null or data ->> 'timestamp' = '' then 'missing_timestamp'\n            when not ((data ->> 'timestamp') ~ '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}') then 'malformed_timestamp'\n            when data ->> 'user_id' is null then 'missing_user_id'\n            when data ->> 'episode_id' is null then 'missing_episode_id'\n            else 'other_issue'\n        end as issue_type\n    from source\n    where data ->> 'event_type' is null \n       or data ->> 'event_type' not in ('play', 'pause', 'seek', 'complete')\n       or data ->> 'timestamp' is null \n       or data ->> 'timestamp' = ''\n       or not ((data ->> 'timestamp') ~ '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}')\n       or data ->> 'user_id' is null\n       or data ->> 'episode_id' is null\n)\n\nselect * from invalid_events", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.1}]}, {"unique_id": "model.podcast_analytics.stg_users", "schema": "public", "name": "stg_users", "status": "success", "last_exec_time": 0.1, "median_exec_time": 0.1, "compiled_code": "-- stg_users.sql : clean user reference data\nwith source as (\n    select * from \"podcast_analytics\".\"public\".\"raw_users\"\n)\nselect\n    cast(user_id as text) as user_id,\n    cast(signup_date as date) as signup_date,\n    country\nfrom source", "last_generated_at": "2025-07-05T10:55:08+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "time_utc": "2025-07-05T10:55:08+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.1}]}], "model_runs_totals": {"model.podcast_analytics.dim_episodes": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.dim_users": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.fact_user_events": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.int_user_sessions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.mart_top_episodes": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.mart_user_session_metrics": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.stg_episodes": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.stg_user_events": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.stg_user_events_invalid": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.podcast_analytics.stg_users": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}}, "filters": {"test_results": [{"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.podcast_analytics.fact_user_events", "model.podcast_analytics.stg_users", "model.podcast_analytics.dim_episodes", "model.podcast_analytics.stg_episodes", "model.podcast_analytics.stg_user_events", "model.podcast_analytics.dim_users", "model.podcast_analytics.stg_user_events_invalid"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.podcast_analytics.raw.users", "source.podcast_analytics.raw.event_files", "source.podcast_analytics.raw.episodes", "model.podcast_analytics.mart_user_session_metrics", "model.podcast_analytics.int_user_sessions", "model.podcast_analytics.mart_top_episodes"]}], "test_runs": [{"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.podcast_analytics.fact_user_events", "model.podcast_analytics.stg_users", "model.podcast_analytics.dim_episodes", "model.podcast_analytics.stg_episodes", "model.podcast_analytics.stg_user_events", "model.podcast_analytics.dim_users", "model.podcast_analytics.stg_user_events_invalid"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.podcast_analytics.raw.users", "source.podcast_analytics.raw.event_files", "source.podcast_analytics.raw.episodes", "model.podcast_analytics.mart_user_session_metrics", "model.podcast_analytics.int_user_sessions", "model.podcast_analytics.mart_top_episodes"]}], "model_runs": [{"name": "success", "display_name": "Successful Runs", "model_unique_ids": ["model.podcast_analytics.fact_user_events", "model.podcast_analytics.stg_users", "model.podcast_analytics.dim_episodes", "model.podcast_analytics.stg_episodes", "model.podcast_analytics.stg_user_events", "model.podcast_analytics.mart_user_session_metrics", "model.podcast_analytics.dim_users", "model.podcast_analytics.int_user_sessions", "model.podcast_analytics.stg_user_events_invalid", "model.podcast_analytics.mart_top_episodes"]}]}, "lineage": {"nodes": [{"id": "seed.podcast_analytics.raw_episodes", "type": "seed", "sub_type": null}, {"id": "seed.podcast_analytics.raw_users", "type": "seed", "sub_type": null}, {"id": "model.podcast_analytics.int_user_sessions", "type": "model", "sub_type": "view"}, {"id": "model.podcast_analytics.dim_users", "type": "model", "sub_type": "table"}, {"id": "model.podcast_analytics.mart_top_episodes", "type": "model", "sub_type": "table"}, {"id": "model.podcast_analytics.mart_user_session_metrics", "type": "model", "sub_type": "table"}, {"id": "model.podcast_analytics.fact_user_events", "type": "model", "sub_type": "table"}, {"id": "model.podcast_analytics.dim_episodes", "type": "model", "sub_type": "table"}, {"id": "model.podcast_analytics.stg_user_events", "type": "model", "sub_type": "view"}, {"id": "model.podcast_analytics.stg_users", "type": "model", "sub_type": "view"}, {"id": "model.podcast_analytics.stg_episodes", "type": "model", "sub_type": "view"}, {"id": "model.podcast_analytics.stg_user_events_invalid", "type": "model", "sub_type": "view"}, {"id": "source.podcast_analytics.raw.event_files", "type": "source", "sub_type": null}, {"id": "source.podcast_analytics.raw.users", "type": "source", "sub_type": null}, {"id": "source.podcast_analytics.raw.episodes", "type": "source", "sub_type": null}], "edges": [["model.podcast_analytics.int_user_sessions", "model.podcast_analytics.stg_user_events"], ["model.podcast_analytics.stg_user_events", "source.podcast_analytics.raw.event_files"], ["model.podcast_analytics.dim_users", "model.podcast_analytics.stg_users"], ["model.podcast_analytics.stg_users", "source.podcast_analytics.raw.users"], ["model.podcast_analytics.mart_top_episodes", "model.podcast_analytics.stg_user_events"], ["model.podcast_analytics.mart_user_session_metrics", "model.podcast_analytics.int_user_sessions"], ["model.podcast_analytics.fact_user_events", "model.podcast_analytics.stg_user_events"], ["model.podcast_analytics.dim_episodes", "model.podcast_analytics.stg_episodes"], ["model.podcast_analytics.stg_episodes", "source.podcast_analytics.raw.episodes"], ["model.podcast_analytics.stg_user_events_invalid", "source.podcast_analytics.raw.event_files"]]}, "invocations": [{"invocation_id": "07a5a8b0-7e62-4485-b31f-459bf00048db", "detected_at": null, "command": "run", "selected": "", "full_refresh": false, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, {"invocation_id": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "detected_at": null, "command": "run", "selected": "elementary", "full_refresh": false, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}], "resources_latest_invocation": {"model.elementary.alerts_anomaly_detection": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.alerts_dbt_models": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.alerts_dbt_source_freshness": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.alerts_dbt_tests": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.alerts_schema_changes": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.anomaly_threshold_sensitivity": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.data_monitoring_metrics": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_artifacts_hashes": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_columns": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_exposures": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_invocations": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_metrics": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_models": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_run_results": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_seeds": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_snapshots": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_source_freshness_results": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_sources": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.dbt_tests": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.elementary_test_results": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.job_run_results": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.metadata": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.metrics_anomaly_score": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.model_run_results": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.monitors_runs": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.schema_columns_snapshot": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.seed_run_results": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.snapshot_run_results": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.elementary.test_result_rows": "9d46821c-c78e-4986-8f28-f7dc0a31f3f2", "model.podcast_analytics.dim_episodes": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.dim_users": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.fact_user_events": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.int_user_sessions": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.mart_top_episodes": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.mart_user_session_metrics": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.stg_episodes": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.stg_user_events": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.stg_user_events_invalid": "07a5a8b0-7e62-4485-b31f-459bf00048db", "model.podcast_analytics.stg_users": "07a5a8b0-7e62-4485-b31f-459bf00048db"}, "invocations_job_identification": {}, "env": {"project_name": "podcast_analytics", "env": "dev", "warehouse_type": "postgres"}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "f5448fcf-a795-41ac-977d-bd8e13dd4d85", "anonymous_warehouse_id": "49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d9763"}}